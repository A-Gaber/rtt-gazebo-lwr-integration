// Start LWR SIMULATION
import("rtt_ros")
ros.import("rtt_rospack")


ros.import("conman")
ros.import("conman_ros")
loadComponent("scheme","conman::Scheme")
setActivity("scheme",0.001,10,ORO_SCHED_RT)
scheme.loadService("conman_ros")


runScript(ros.find("rtt_lwr_sim")+"/scripts/lwr_sim.ops")
lwr_sim.setJointImpedanceMode()

ros.import("lcsr_controllers")


loadComponent("pid","lcsr_controllers::JointPIDController")
//pid.robot_description_param="/lwr_sim/robot_description"
connectPeers("pid","lwr_sim")
connect("lwr_sim.JointPosition","pid.joint_position_in",ConnPolicy())
connect("lwr_sim.JointVelocity","pid.joint_velocity_in",ConnPolicy())
connect("pid.joint_effort_out","lwr_sim.JointTorqueCommand",ConnPolicy())


loadComponent("traj_rml","lcsr_controllers::JointTrajGeneratorRML")
//traj_rml.robot_description_param="/lwr_sim/robot_description"
connectPeers("traj_rml","lwr_sim")
connect("lwr_sim.JointPosition", "traj_rml.joint_position_in",ConnPolicy());
connect("lwr_sim.JointVelocity", "traj_rml.joint_velocity_in",ConnPolicy());
connect("traj_rml.joint_position_out", "pid.joint_position_cmd_in",ConnPolicy());
connect("traj_rml.joint_velocity_out", "pid.joint_velocity_cmd_in",ConnPolicy());


pid.configure()
traj_rml.configure()




connectPeers("scheme","lwr_sim")
connectPeers("scheme","pid")
connectPeers("scheme","traj_rml")

scheme.addBlock("lwr_sim")
scheme.addBlock("pid")
scheme.addBlock("traj_rml")

scheme.addGroup("robots")
scheme.addGroup("joint_control")
scheme.addGroup("traj_control")

scheme.addToGroup("lwr_sim","robots")
scheme.addToGroup("pid","joint_control")
scheme.addToGroup("traj_rml","traj_control")


scheme.latchOutputs("lwr_sim",true)
scheme.latchConnections("joint_control","traj_control",true)

scheme.configure()


scheme.enableBlock("robots",true)
scheme.enableBlock("joint_control",true)
scheme.enableBlock("traj_control",true)

scheme.start()



