# Adapted from https://github.com/jbohren/conman
language:
  - cpp
  - python
python:
  - "2.7"

sudo: required

compiler:
  - gcc
before_install:
  # Gcc 4.8
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -qq
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  # MongoDB hack - I don't fully understand this but its for moveit_warehouse
  - sudo apt-get remove -y mongodb mongodb-10gen
  - sudo apt-get install -y mongodb-clients mongodb-server -o Dpkg::Options::="--force-confdef" # default actions
  # OmniORB 4
  - sudo apt-get install -y libomniorb4-dev omniidl libomniorb4* omni* libblas* liblapack* f2c omniidl-python omniorb-nameserver libomniorb4-1-dbg libomniorb4-dev omniorb omniorb-idl python-omniorb-dbg python-omniorb-doc
  # Install newer boost compatible with gcc 4.8.
  - wget --no-verbose --output-document=boost-trunk.tar.bz2 http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.bz2/download
  - export BOOST_ROOT="$TRAVIS_BUILD_DIR/../boost-trunk"
  - export CMAKE_MODULE_PATH="$BOOST_ROOT"
  - mkdir -p $BOOST_ROOT
  - tar jxf boost-trunk.tar.bz2 --strip-components=1 -C $BOOST_ROOT
  - (cd $BOOST_ROOT; ./bootstrap.sh --with-libraries=atomic)
  - (cd $BOOST_ROOT; ./b2 threading=multi --prefix=$BOOST_ROOT -d0 install)
  # Define some config vars
  - export ROS_DISTRO=hydro
  - export CI_SOURCE_PATH=$(pwd)
  - export EXTRA_CMAKE_ARGS="-DENABLE_CORBA=ON -DCORBA_IMPLEMENTATION=OMNIORB"
  # Bootstrap a minimal ROS installation
  - git clone https://github.com/jhu-lcsr/ros_ci_tools /tmp/ros_ci_tools && export PATH=/tmp/ros_ci_tools:$PATH
  - ros_ci_bootstrap public
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Create non-isolated workspace
  - mkdir -p ~/ws/src
  - pushd ~/ws/src
  - ln -s $CI_SOURCE_PATH
  - git clone https://github.com/jhu-lcsr-forks/rtt_ros_integration.git
  - pushd rtt_ros_integration
  - find . -maxdepth 1 -type d -exec touch {}/CATKIN_IGNORE \;
  - rm CATKIN_IGNORE
  - rm rtt_actionlib/CATKIN_IGNORE
  - popd
  - git clone https://github.com/jbohren/rqt_dot.git
  - git clone https://github.com/jhu-lcsr/rtt_ros_control.git
  - git clone https://github.com/jhu-lcsr/rtt_gazebo
  - git clone https://github.com/kuka-isir/rtt_ros_kdl_tools
  - git clone https://github.com/orocos/rtt_geometry.git
  - git clone https://github.com/jbohren/conman.git
  - popd
  - wget https://raw.githubusercontent.com/IDSCETHZurich/re_trajectory-generator/master/kuka_IK/include/friComm.h
  - mv friComm.h ~/ws/src/rtt_lwr/lwr_hardware/kuka_lwr_fri/include/kuka_lwr_fri/friComm.h
  - rosdep install -r --from-paths ~/ws/src --ignore-src --rosdistro $ROS_DISTRO -y
  # Currently waiting for this rosdep rule to be merged
  - sudo apt-get install -qq google-mock lcov
  - sudo pip install cpp-coveralls --use-mirrors

install:
  # build the normal catkin workspace
  - pushd ~/ws
  - catkin_make -j2 --cmake-args -DCMAKE_BUILD_TYPE=Debug 
    # -DENABLE_COVERAGE=On 

script:
  # Run tests
  - source devel/setup.bash
  - catkin_make 
